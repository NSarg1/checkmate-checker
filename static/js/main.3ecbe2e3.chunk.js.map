{"version":3,"sources":["pages/mate-checker/mate-checker.methods.js","components/chess-figure/ChessFigure.styled.js","components/chess-figure/ChessFigure.component.jsx","components/chess-board/ChessBoard.styled.js","components/chess-board/ChessBoard.component.jsx","components/modal/Modal.component.jsx","components/button/Button.copmponent.jsx","pages/mate-checker/MateChecker.page.jsx","App/App.js","index.js"],"names":["Figures","state","positions","isProtected","checkIsMate","selfPosition","blackKing","blackKingRow","blackKingInd","isUnderAttack","_board","valArr","i","console","log","k","push","includes","this","JSON","parse","stringify","attackZone","king","queen","horse","bishop","rowNum","pos","curFigure","magicNum","magicNum2","whiteList","loop","isNotBlocking","posMinus1","posMinus2","posPlus1","posPlus2","queenZone","elphZone","kingZone","horseZone","Image","styled","div","props","activeFigure","elm","ChessFigure","selectActiveFigure","classes","className","join","onClick","bind","BoardCell","li","figuresProtected","item","ChessBoard","setFigures","map","row","rowIdx","key","itemIdx","event","x","clientX","y","clientY","handleClick","animationTiming","enter","exit","modal","show","closeModal","mateStatus","ReactDOM","createPortal","Transition","mountOnEnter","unmountOnExit","in","timeout","cssClasses","document","getElementById","CustomButton","children","otherProps","MateChecker","initialState","Array","fill","initialPositions","10","20","30","40","50","initialProtected","useState","setState","isSubmited","setIsSubmited","setActiveFigure","setFiguresProtected","figuresPositions","setFiguresPositions","setMateStatus","selectedFigure","Object","keys","stateJSON","prevState","alert","figures","values","whiteKing","whiteKingRow","whiteKingInd","Math","abs","kingsPositionsValidator","runAll","App","render"],"mappings":"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","file":"static/js/main.3ecbe2e3.chunk.js","sourcesContent":["export class Figures {\r\n\tconstructor(state, positions, isProtected) {\r\n\t\tthis.state = JSON.parse(JSON.stringify(state)); // DID DEEP COPY\r\n\t\tthis.positions = { ...positions };\r\n\t\tthis.isProtected = { ...isProtected };\r\n\t\tthis.attackZone = 1;\r\n\t\tthis.king = 10;\r\n\t\tthis.queen = 20;\r\n\t\tthis.horse = 30;\r\n\t\tthis.bishop = 40;\r\n\t\tthis.blackKing = 50;\r\n\t}\r\n\t//CHECKMATE CHECKING\r\n\tcheckIsMate = () => {\r\n\t\tconst selfPosition = this.blackKing;\r\n\t\tconst [blackKingRow, blackKingInd] = this.positions[selfPosition];\r\n\t\tconst isUnderAttack = this.isProtected[selfPosition];\r\n\t\tconst _board = [...this.state];\r\n\r\n\t\tconst valArr = [];\r\n\t\tfor (let i = blackKingRow - 1; i <= blackKingRow + 1; i++) {\r\n\t\t\tconsole.log(\"_board[i]\", i);\r\n\t\t\tif (!_board[i]) continue;\r\n\t\t\tfor (let k = blackKingInd - 1; k <= blackKingInd + 1; k++) {\r\n\t\t\t\tif (!_board[i][k] && _board[i][k] !== 0) continue;\r\n\t\t\t\tvalArr.push(_board[i][k]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(valArr);\r\n\t\tif (valArr.includes(0)) {\r\n\t\t\treturn \"This isn't mate\";\r\n\t\t} else if (!valArr.includes(0) && isUnderAttack === false) {\r\n\t\t\treturn \"This is stalemate. Nobody wins\";\r\n\t\t} else {\r\n\t\t\treturn \"White wins.\";\r\n\t\t}\r\n\t};\r\n\r\n\t//CHECK IF FIGURES BLOCKING ATACK\r\n\tisNotBlocking(rowNum, pos, selfPosition) {\r\n\t\tconst curFigure = this.state[rowNum][pos];\r\n\r\n\t\tif (curFigure < 10 || curFigure === selfPosition) {\r\n\t\t\treturn true;\r\n\t\t} else if (curFigure === 50) {\r\n\t\t\tthis.isProtected = { ...this.isProtected, [curFigure]: true };\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.isProtected = { ...this.isProtected, [curFigure]: true };\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tqueenZone() {\r\n\t\tlet selfPosition = this.queen;\r\n\t\tconst [rowNum, pos] = this.positions[selfPosition];\r\n\t\tconst magicNum = rowNum + pos;\r\n\t\tconst magicNum2 = rowNum - pos;\r\n\r\n\t\tconst whiteList = [selfPosition, this.blackKing];\r\n\r\n\t\t//! FOR THE TOP PART OF DESK\r\n\t\t// FOR - TO TOP-RIGHT SKEW LINE\r\n\t\tloop: for (let i = rowNum; i >= 0; i--) {\r\n\t\t\tfor (let k = pos; k < 8; k++) {\r\n\t\t\t\tif (i + k === magicNum) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FOR - TO TOP STRAIGHT LINE\r\n\t\tloop: for (let i = rowNum; i >= 0; i--) {\r\n\t\t\tfor (let k = pos; k < 8; k++) {\r\n\t\t\t\tif (k === pos) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FOR - TO TOP-LEFT SKEW LINE\r\n\t\tloop: for (let i = rowNum; i >= 0; i--) {\r\n\t\t\tfor (let k = pos; k >= 0; k--) {\r\n\t\t\t\tif (i - k === magicNum2) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//! FOR THE BOTTOM PART OF rowNum\r\n\t\t// FOR - TO BOTTOM-RIGHT SKEW LINE\r\n\t\tloop: for (let i = rowNum; i < 8; i++) {\r\n\t\t\tfor (let k = pos; k < 8; k++) {\r\n\t\t\t\tif (i - k === magicNum2) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FOR - TO BOTTOM STRAIGHT LINE\r\n\t\tloop: for (let i = rowNum; i < 8; i++) {\r\n\t\t\tfor (let k = pos; k < 8; k++) {\r\n\t\t\t\tif (k === pos) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FOR - TO BOTTOM-LEFT SKEW LINE\r\n\t\tloop: for (let i = rowNum; i < 8; i++) {\r\n\t\t\tfor (let k = pos; k >= 0; k--) {\r\n\t\t\t\tif (i + k === magicNum) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//! FOR THE HORIZONTAL LINE OF DESK\r\n\t\t// TO LEFT HORIZONTAL LINE\r\n\t\tfor (let k = pos - 1; k >= 0; k--) {\r\n\t\t\tif (this.isNotBlocking(rowNum, k, selfPosition)) {\r\n\t\t\t\tif (this.state[rowNum][k] === 50) continue;\r\n\t\t\t\tthis.state[rowNum][k] = this.attackZone;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TO RIGHT HORIZONTAL LINE\r\n\t\tfor (let k = pos + 1; k < 8; k++) {\r\n\t\t\tif (this.isNotBlocking(rowNum, k, selfPosition)) {\r\n\t\t\t\tif (this.state[rowNum][k] === 50) continue;\r\n\t\t\t\tthis.state[rowNum][k] = this.attackZone;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\telphZone() {\r\n\t\tlet selfPosition = this.bishop;\r\n\t\tconst [rowNum, pos] = this.positions[selfPosition];\r\n\t\tconst magicNum = rowNum + pos;\r\n\t\tconst magicNum2 = rowNum - pos;\r\n\t\tconst whiteList = [selfPosition, this.blackKing];\r\n\r\n\t\t// FOR - TO TOP-RIGHT SKEW LINE\r\n\t\tloop: for (let i = rowNum; i >= 0; i--) {\r\n\t\t\tfor (let k = pos; k < 8; k++) {\r\n\t\t\t\tif (i + k === magicNum) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FOR - TO TOP-LEFT SKEW LINE\r\n\t\tloop: for (let i = rowNum; i >= 0; i--) {\r\n\t\t\tfor (let k = pos; k >= 0; k--) {\r\n\t\t\t\tif (i - k === magicNum2) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FOR - TO BOTTOM-RIGHT SKEW LINE\r\n\t\tloop: for (let i = rowNum; i < 8; i++) {\r\n\t\t\tfor (let k = pos; k < 8; k++) {\r\n\t\t\t\tif (i - k === magicNum2) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FOR - TO BOTTOM-LEFT SKEW LINE\r\n\t\tloop: for (let i = rowNum; i < 8; i++) {\r\n\t\t\tfor (let k = pos; k >= 0; k--) {\r\n\t\t\t\tif (i + k === magicNum) {\r\n\t\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) {\r\n\t\t\t\t\t\tif (whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\t\t\tthis.state[i][k] = this.attackZone;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tkingZone() {\r\n\t\tconst selfPosition = this.king;\r\n\t\tconst [rowNum, pos] = this.positions[selfPosition];\r\n\t\tconst whiteList = [selfPosition, this.blackKing];\r\n\r\n\t\tfor (let i = rowNum - 1; i <= rowNum + 1; i++) {\r\n\t\t\tfor (let k = pos - 1; k <= pos + 1; k++) {\r\n\t\t\t\tif (!this.state[i] || k < 0 || k > 7 || whiteList.includes(this.state[i][k])) continue;\r\n\t\t\t\tif (this.isNotBlocking(i, k, selfPosition)) this.state[i][k] = this.attackZone;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thorseZone() {\r\n\t\tconst selfPosition = this.horse;\r\n\t\tconst [rowNum, pos] = this.positions[selfPosition];\r\n\t\tconst whiteList = [selfPosition, this.blackKing];\r\n\t\tconst posMinus1 = pos - 1;\r\n\t\tconst posMinus2 = pos - 2;\r\n\t\tconst posPlus1 = pos + 1;\r\n\t\tconst posPlus2 = pos + 2;\r\n\r\n\t\tfor (let i = rowNum - 2; i <= rowNum + 2; i++) {\r\n\t\t\tif (!this.state[i]) continue;\r\n\r\n\t\t\tif (i === rowNum + 2 || i === rowNum - 2) {\r\n\t\t\t\tif (posMinus1 >= 0) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.isNotBlocking(i, posMinus1, selfPosition) &&\r\n\t\t\t\t\t\twhiteList.includes(this.state[i][pos])\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.state[i][posMinus1] = this.attackZone;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (posPlus1 < 7) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.isNotBlocking(i, posPlus1, selfPosition) &&\r\n\t\t\t\t\t\twhiteList.includes(this.state[i][pos])\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.state[i][posPlus1] = this.attackZone;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (i === rowNum - 1 || i === rowNum + 1) {\r\n\t\t\t\tif (posMinus2 >= 0) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.isNotBlocking(i, posMinus2, selfPosition) &&\r\n\t\t\t\t\t\twhiteList.includes(this.state[i][pos])\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.state[i][posMinus2] = this.attackZone;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (posPlus2 < 7) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.isNotBlocking(i, posPlus2, selfPosition) &&\r\n\t\t\t\t\t\twhiteList.includes(this.state[i][pos])\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.state[i][posPlus2] = this.attackZone;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trunAll() {\r\n\t\tthis.queenZone();\r\n\t\tthis.elphZone();\r\n\t\tthis.kingZone();\r\n\t\tthis.horseZone();\r\n\t}\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.div((props) => {\r\n\tconst { activeFigure, elm } = props;\r\n\r\n\treturn `\r\n   animation-name: ${activeFigure === elm ? \"scaleIn\" : \"\"};\r\n\tbackground-size: cover;\r\n\tbackground-position: center;\r\n   `;\r\n});\r\n","import React  from \"react\";\r\n\r\n// COMPONENTS\r\nimport { Image } from \"./ChessFigure.styled.js\";\r\n\r\nconst ChessFigure = ({ elm, selectActiveFigure, activeFigure }) => {\r\n\tconst classes = [\"chess-figure\", `chess-figure--${elm}`, \"chess-figure--outside\"];\r\n\r\n\t// console.log(state);\r\n\treturn (\r\n\t\t<Image\r\n\t\t\tclassName={classes.join(\" \")}\r\n\t\t\tactiveFigure={activeFigure}\r\n\t\t\telm={elm}\r\n\t\t\tonClick={selectActiveFigure.bind(this, elm)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ChessFigure;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BoardCell = styled.li((props) => {\r\n\tconst { activeFigure, figuresProtected, item } = props;\r\n\r\n\treturn `\r\n   background-color:${\r\n\t\titem === 1\r\n\t\t\t? \"rgba(255, 0, 0, 0.200)\"\r\n\t\t\t: figuresProtected[item] && item === 50\r\n\t\t\t? \"rgba(255, 0, 0, 0.500)\"\r\n\t\t\t: figuresProtected[item]\r\n\t\t\t? \"rgba(0, 184, 0, 0.350)\"\r\n\t\t\t: \"\"\r\n\t};\r\n   &:hover {\r\n     background-color: ${activeFigure ? \"rgba(255, 208, 0, 0.250)\" : \"\"};\r\n   }\r\n   \r\n   `;\r\n});\r\n\r\n\r\nexport const Image = styled.div(props => {\r\n    // const { imageUrl, height, width, flex } = props;\r\n\r\n    return `\r\n\t\r\n\tbackground-size: cover;\r\n\tbackground-position: center;\r\n   `;\r\n});\r\n\r\n","import React from 'react';\r\n\r\nimport { Image } from './ChessBoard.styled';\r\n\r\nimport { BoardCell } from './ChessBoard.styled.js';\r\n\r\nconst ChessBoard = ({ state, setFigures, figuresProtected, activeFigure }) => {\r\n    const handleClick = (event, rowIdx, itemIdx, item) => {\r\n        setFigures(rowIdx, itemIdx, item, { x: event.clientX, y: event.clientY });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chess-board\">\r\n            {state.map((row, rowIdx) => (\r\n                <ul key={rowIdx} className=\"chess-board__row\">\r\n                    {row.map((item, itemIdx) => {\r\n                        return (\r\n                            <BoardCell\r\n                                figuresProtected={figuresProtected}\r\n                                item={item}\r\n                                activeFigure={activeFigure}\r\n                                key={`${rowIdx}-${itemIdx}`}\r\n                                onClick={event => handleClick(event, rowIdx, itemIdx, item)}\r\n                                className=\"chess-board__cell\">\r\n                                {item > 9 ? (\r\n                                    <Image\r\n                                        className={`\r\n\t\t\t\t\t\t\t\t\t\tchess-figure \r\n\t\t\t\t\t\t\t\t\t\tchess-board__cell-figure  \r\n\t\t\t\t\t\t\t\t\t\tchess-figure--${item}`}\r\n                                    />\r\n                                ) : null}\r\n                            </BoardCell>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChessBoard;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Transition from \"react-transition-group/Transition\";\n\nconst animationTiming = {\n\tenter: 500,\n\texit: 500,\n};\n\nconst modal = (props) => {\n\tconst { show, closeModal, mateStatus } = props;\n\n\treturn ReactDOM.createPortal(\n\t\t<Transition mountOnEnter unmountOnExit in={show} timeout={animationTiming}>\n\t\t\t{(state) => {\n\t\t\t\tconst cssClasses = [\n\t\t\t\t\t\"modal\",\n\t\t\t\t\tstate === \"entering\" ? \"modal--open\" : state === \"exiting\" ? \"modal--closed\" : null,\n\t\t\t\t];\n\n\t\t\t\tconsole.log(state);\n\t\t\t\treturn (\n\t\t\t\t\t<div className={cssClasses.join(\" \")}>\n\t\t\t\t\t\t<h1 className='mate-checker__status'>{mateStatus}</h1>\n\t\t\t\t\t\t<button className='btn' onClick={closeModal}>\n\t\t\t\t\t\t\tReset positions\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Transition>,\n\t\tdocument.getElementById(\"root\")\n\t);\n};\n\nexport default modal;\n","import React from \"react\";\r\n\r\nconst CustomButton = ({ className, children, ...otherProps }) => {\r\n\treturn (\r\n\t\t<button {...otherProps} className={className ? `ns-btn ${className}` : \"ns-btn\"}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default CustomButton;","// LIBRARIES\r\nimport React, { useState } from 'react';\r\n//UTILS\r\nimport { Figures } from './mate-checker.methods.js';\r\n\r\n// COMPONENTS\r\nimport ChessFigure from '../../components/chess-figure/ChessFigure.component';\r\nimport ChessBoard from '../../components/chess-board/ChessBoard.component';\r\nimport Modal from '../../components/modal/Modal.component';\r\nimport Button from '../../components/button/Button.copmponent';\r\n\r\nconst MateChecker = () => {\r\n    /* White\r\n     *king = 10; queen = 20;horse = 30; bishop = 40*/\r\n    /* Black\r\n     *king = 50;*/\r\n\r\n    const initialState = Array(8).fill(Array(8).fill(0));\r\n    const initialPositions = { 10: null, 20: null, 30: null, 40: null, 50: null };\r\n    const initialProtected = { 10: false, 20: false, 30: false, 40: false, 50: false };\r\n\r\n    const [state, setState] = useState(initialState);\r\n    const [isSubmited, setIsSubmited] = useState(false);\r\n    const [activeFigure, setActiveFigure] = useState('');\r\n    const [figuresProtected, setFiguresProtected] = useState(initialProtected);\r\n    const [figuresPositions, setFiguresPositions] = useState(initialPositions);\r\n    const [mateStatus, setMateStatus] = useState('');\r\n\r\n    //SET FIGURES TO THE BOARD\r\n    const setFigures = (rowIdx, itemIdx, selectedFigure) => {\r\n        // USER MUST RESET THE GAME AFTER SUBMITTING\r\n        if (isSubmited) return;\r\n        const stateJSON = JSON.stringify(state);\r\n        const _board = JSON.parse(stateJSON);\r\n\r\n        // UNDO SETTED FIGURE POSITION\r\n        if (!activeFigure) {\r\n            if (!selectedFigure) return;\r\n            setFiguresPositions(prevState => ({\r\n                ...prevState,\r\n                [selectedFigure]: null,\r\n            }));\r\n            _board[rowIdx][itemIdx] = 0;\r\n            return setState(_board);\r\n        }\r\n        // VALIDATE FIGURE SETTING\r\n        // FORBID USER SETTING FIGURES IN THE SAME AREA\r\n        if (_board[rowIdx][itemIdx] > 9) {\r\n            alert('This field has already occupied');\r\n            return;\r\n        }\r\n\r\n        //SET FIGURE TO THE SELECTED AREA\r\n        setFiguresPositions(prevState => ({\r\n            ...prevState,\r\n            [activeFigure]: [rowIdx, itemIdx],\r\n        }));\r\n        _board[rowIdx][itemIdx] = activeFigure;\r\n        setState(_board);\r\n        setActiveFigure('');\r\n    };\r\n    //SELECT FIGURE THAT INTENDED TO SET ON THE BOARD\r\n    const selectActiveFigure = selectedFigure => {\r\n        if (selectedFigure === activeFigure) {\r\n            setActiveFigure('');\r\n        } else {\r\n            setActiveFigure(selectedFigure);\r\n        }\r\n    };\r\n    //VALIDATION FOR TWO KINGS\r\n    const kingsPositionsValidator = (whiteKing, blackKing) => {\r\n        const [whiteKingRow, whiteKingInd] = [...whiteKing];\r\n        const [blackKingRow, blackKingInd] = [...blackKing];\r\n\r\n        if (Math.abs(whiteKingRow - blackKingRow) <= 1 && Math.abs(whiteKingInd - blackKingInd) <= 1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const submitAll = () => {\r\n        if (isSubmited) return;\r\n        const figures = new Figures(state, figuresPositions, figuresProtected);\r\n        const positionArr = Object.values(figuresPositions);\r\n\r\n        // CHECK IF ALL FIGURES HAS BEEN PLACED AND VALIDATE IT\r\n        if (!positionArr.map(item => item).includes(null)) {\r\n            if (!kingsPositionsValidator(figuresPositions[10], figuresPositions[50])) {\r\n                alert(\"You can't set two kings next to each other\");\r\n                return;\r\n            }\r\n            figures.runAll();\r\n            setState(figures.state);\r\n            setFiguresProtected(prevState => ({ ...prevState, ...figures.isProtected }));\r\n            setMateStatus(figures.checkIsMate());\r\n        } else {\r\n            alert('Please set all figures');\r\n            return;\r\n        }\r\n        setIsSubmited(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setState(initialState);\r\n        setFiguresPositions(initialPositions);\r\n        setFiguresProtected(initialProtected);\r\n        setIsSubmited(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mate-checker\">\r\n            <div className=\"mate-checker__main\">\r\n                <div className=\"mate-checker__container\">\r\n                    <div className=\"mate-checker__figures\">\r\n                        {Object.keys(figuresPositions).map(elm => {\r\n                            return !figuresPositions[elm] ? (\r\n                                <ChessFigure\r\n                                    activeFigure={activeFigure}\r\n                                    selectActiveFigure={selectActiveFigure}\r\n                                    figuresPositions={figuresPositions}\r\n                                    key={elm}\r\n                                    elm={+elm}\r\n                                />\r\n                            ) : (\r\n                                <div key={elm}></div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <ChessBoard\r\n                        state={state}\r\n                        activeFigure={activeFigure}\r\n                        setFigures={setFigures}\r\n                        figuresProtected={figuresProtected}\r\n                    />\r\n                    <div>\r\n                        <div className=\"mate-checker__control-btns\">\r\n                            <Button onClick={submitAll}>Submit</Button>\r\n                        </div>\r\n\r\n                        <Modal show={isSubmited} mateStatus={mateStatus} closeModal={reset} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MateChecker;\r\n","import React from \"react\";\r\nimport MateChecker from \"../pages/mate-checker/MateChecker.page\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<MateChecker />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}